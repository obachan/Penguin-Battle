diff --git a/.deps/Project1-ClientState.Po b/.deps/Project1-ClientState.Po
index 0583dc9..f8393df 100644
--- a/.deps/Project1-ClientState.Po
+++ b/.deps/Project1-ClientState.Po
@@ -884,7 +884,7 @@ Project1-ClientState.o: ClientState.cpp ClientState.hpp AppState.hpp \
  /lusr/opt/libsdl-1.2.14/include/SDL/SDL_version.h \
  /lusr/opt/libsdl-1.2.14/include/SDL/begin_code.h \
  /lusr/opt/libsdl-1.2.14/include/SDL/close_code.h HUD.hpp Network.hpp \
- usr/include/SDL_net/SDL_net.h WorldObjects.hpp WorldObjectBall.hpp \
+ usr/include/SDL_net/SDL_net.h WorldObjectFactory.hpp WorldObjectBall.hpp \
  WorldObjectAbstract.hpp \
  /usr/local/include/bullet/BulletCollision/CollisionShapes/btBox2dShape.h \
  /usr/local/include/bullet/BulletCollision/CollisionShapes/btPolyhedralConvexShape.h \
@@ -2904,7 +2904,7 @@ Network.hpp:
 
 usr/include/SDL_net/SDL_net.h:
 
-WorldObjects.hpp:
+WorldObjectFactory.hpp:
 
 WorldObjectBall.hpp:
 
diff --git a/.deps/Project1-GameState.Po b/.deps/Project1-GameState.Po
index 615fdb1..f7a5a93 100644
--- a/.deps/Project1-GameState.Po
+++ b/.deps/Project1-GameState.Po
@@ -884,7 +884,7 @@ Project1-GameState.o: GameState.cpp GameState.hpp AppState.hpp \
  /lusr/opt/libsdl-1.2.14/include/SDL/SDL_version.h \
  /lusr/opt/libsdl-1.2.14/include/SDL/begin_code.h \
  /lusr/opt/libsdl-1.2.14/include/SDL/close_code.h HUD.hpp Network.hpp \
- usr/include/SDL_net/SDL_net.h WorldObjects.hpp WorldObjectBall.hpp \
+ usr/include/SDL_net/SDL_net.h WorldObjectFactory.hpp WorldObjectBall.hpp \
  WorldObjectAbstract.hpp \
  /usr/local/include/bullet/BulletCollision/CollisionShapes/btBox2dShape.h \
  /usr/local/include/bullet/BulletCollision/CollisionShapes/btPolyhedralConvexShape.h \
@@ -2904,7 +2904,7 @@ Network.hpp:
 
 usr/include/SDL_net/SDL_net.h:
 
-WorldObjects.hpp:
+WorldObjectFactory.hpp:
 
 WorldObjectBall.hpp:
 
diff --git a/.deps/Project1-OgreApp.Po b/.deps/Project1-OgreApp.Po
index df3faaa..00a992c 100644
--- a/.deps/Project1-OgreApp.Po
+++ b/.deps/Project1-OgreApp.Po
@@ -885,7 +885,7 @@ Project1-OgreApp.o: OgreApp.cpp OgreApp.hpp OgreFramework.hpp \
  /lusr/opt/libsdl-1.2.14/include/SDL/begin_code.h \
  /lusr/opt/libsdl-1.2.14/include/SDL/close_code.h HUD.hpp Network.hpp \
  usr/include/SDL_net/SDL_net.h AppStateManager.hpp AppState.hpp \
- MenuState.hpp GameState.hpp WorldObjects.hpp WorldObjectBall.hpp \
+ MenuState.hpp GameState.hpp WorldObjectFactory.hpp WorldObjectBall.hpp \
  WorldObjectAbstract.hpp \
  /usr/local/include/bullet/BulletCollision/CollisionShapes/btBox2dShape.h \
  /usr/local/include/bullet/BulletCollision/CollisionShapes/btPolyhedralConvexShape.h \
@@ -2913,7 +2913,7 @@ MenuState.hpp:
 
 GameState.hpp:
 
-WorldObjects.hpp:
+WorldObjectFactory.hpp:
 
 WorldObjectBall.hpp:
 
diff --git a/.deps/Project1-ServerState.Po b/.deps/Project1-ServerState.Po
index 026dd12..50d8737 100644
--- a/.deps/Project1-ServerState.Po
+++ b/.deps/Project1-ServerState.Po
@@ -884,7 +884,7 @@ Project1-ServerState.o: ServerState.cpp ServerState.hpp AppState.hpp \
  /lusr/opt/libsdl-1.2.14/include/SDL/SDL_version.h \
  /lusr/opt/libsdl-1.2.14/include/SDL/begin_code.h \
  /lusr/opt/libsdl-1.2.14/include/SDL/close_code.h HUD.hpp Network.hpp \
- usr/include/SDL_net/SDL_net.h WorldObjects.hpp WorldObjectBall.hpp \
+ usr/include/SDL_net/SDL_net.h WorldObjectFactory.hpp WorldObjectBall.hpp \
  WorldObjectAbstract.hpp \
  /usr/local/include/bullet/BulletCollision/CollisionShapes/btBox2dShape.h \
  /usr/local/include/bullet/BulletCollision/CollisionShapes/btPolyhedralConvexShape.h \
@@ -2904,7 +2904,7 @@ Network.hpp:
 
 usr/include/SDL_net/SDL_net.h:
 
-WorldObjects.hpp:
+WorldObjectFactory.hpp:
 
 WorldObjectBall.hpp:
 
diff --git a/ClientState.hpp b/ClientState.hpp
index 83fe148..e369431 100644
--- a/ClientState.hpp
+++ b/ClientState.hpp
@@ -8,7 +8,7 @@
 #include "AppState.hpp"
  
 #include "OgreFramework.hpp"
-#include "WorldObjects.hpp"
+#include "WorldObjectFactory.hpp"
  
 //|||||||||||||||||||||||||||||||||||||||||||||||
 
diff --git a/GameState.cpp b/GameState.cpp
index 2797cd1..67b5666 100644
--- a/GameState.cpp
+++ b/GameState.cpp
@@ -61,31 +61,12 @@ void GameState::enter()
 	//OgreFramework::getSingletonPtr()->m_pSceneMgr->createLight("3rdLight")->setPosition(-50, 50, -50);
 	//OgreFramework::getSingletonPtr()->m_pSceneMgr->createLight("4thLight")->setPosition(50, 50, -50);
 
-	// Create Ball
-	ball = new Ball(m_pSceneMgr, physics);
-	//test_ball = new Ball(OgreFramework::getSingletonPtr()->m_pSceneMgr, OgreFramework::getSingletonPtr()->physics, 30, 30, 30);
-
-
-	// Create Room
-	room = new Room(m_pSceneMgr, physics);
-
-	// Create Paddle
-	//paddle = new Paddle(OgreFramework::getSingletonPtr()->m_pSceneMgr);
-	//OgreFramework::getSingletonPtr()->physics->add_object_to_dynamicWorld(paddle->paddleRigidBody);
-
-
-
-	// Create Penguin
-	penguin = new Penguin(m_pSceneMgr, physics);
-
-	// Create Goal
-	goal = new Goal(m_pSceneMgr, physics);
-
-	
-	// Create Terrain placeholder
-	terrain = new Terrain(m_pSceneMgr);
-
-
+  	worldObjectFactory = new WorldObjectFactory();
+	ball = new Ball(m_pSceneMgr, physics); 			// Create Ball
+	room = new Room(m_pSceneMgr, physics); 			// Create Room
+	penguin = new Penguin(m_pSceneMgr, physics); 	// Create Penguin
+	goal = new Goal(m_pSceneMgr, physics);			// Create Goal
+	terrain = new Terrain(m_pSceneMgr);				// Create Terrain
 
 	OgreFramework::getSingletonPtr()->m_pSceneMgr = m_pSceneMgr;
 	OgreFramework::getSingletonPtr()->m_pCamera = m_pCamera;
@@ -258,141 +239,6 @@ void GameState::update(double timeSinceLastFrame)
 
 //|||||||||||||||||||||||||||||||||||||||||||||||
  
-void GameState::startDemo()
-{
-	new OgreFramework();
-	if(!OgreFramework::getSingletonPtr()->initOgre("GameState v1.0", this, 0))
-		return;
- 
-	m_bShutdown = false;
- 
-	OgreFramework::getSingletonPtr()->m_pLog->logMessage("Demo initialized!");
-
-	setupDemoScene();
-	runDemo();
-}
- 
-//|||||||||||||||||||||||||||||||||||||||||||||||
- 
-void GameState::setupDemoScene()
-{
-/*
-
-	// Sets global world conditions
-	OgreFramework::getSingletonPtr()->m_pSceneMgr->setSkyBox(true, "Examples/StarsSkyBox");
-
-	OgreFramework::getSingletonPtr()->m_pSceneMgr->setAmbientLight(Ogre::ColourValue(0.1, 0.1, 0.1));
-	OgreFramework::getSingletonPtr()->m_pSceneMgr->setShadowTechnique(Ogre::SHADOWTYPE_STENCIL_ADDITIVE);
- 
-    	// Create a light
-  	OgreFramework::getSingletonPtr()->m_pSceneMgr->createLight("MainLight")->setPosition(0,50,0);
-	//OgreFramework::getSingletonPtr()->m_pSceneMgr->createLight("2ndLight")->setPosition(50, 50, 50);
-	//OgreFramework::getSingletonPtr()->m_pSceneMgr->createLight("3rdLight")->setPosition(-50, 50, -50);
-	//OgreFramework::getSingletonPtr()->m_pSceneMgr->createLight("4thLight")->setPosition(50, 50, -50);
-
-	// Create Ball
-	ball = new Ball(OgreFramework::getSingletonPtr()->m_pSceneMgr, OgreFramework::getSingletonPtr()->physics);
-	//test_ball = new Ball(OgreFramework::getSingletonPtr()->m_pSceneMgr, OgreFramework::getSingletonPtr()->physics, 30, 30, 30);
-
-
-	// Create Room
-	room = new Room(OgreFramework::getSingletonPtr()->m_pSceneMgr, OgreFramework::getSingletonPtr()->physics);
-
-	// Create Paddle
-	//paddle = new Paddle(OgreFramework::getSingletonPtr()->m_pSceneMgr);
-	//OgreFramework::getSingletonPtr()->physics->add_object_to_dynamicWorld(paddle->paddleRigidBody);
-
-	// Create Penguin
-	penguin = new Penguin(OgreFramework::getSingletonPtr()->m_pSceneMgr, OgreFramework::getSingletonPtr()->physics);
-
-	// Create Goal
-	goal = new Goal(OgreFramework::getSingletonPtr()->m_pSceneMgr, OgreFramework::getSingletonPtr()->physics);
-
-	pause_state = false;
-*/
-}
- 
-//|||||||||||||||||||||||||||||||||||||||||||||||
- 
-void GameState::runDemo()
-{
-	OgreFramework::getSingletonPtr()->m_pLog->logMessage("Start main loop...");
- 
-	double timeSinceLastFrame = 0;
-	double startTime = 0;
- 
-    OgreFramework::getSingletonPtr()->m_pRenderWnd->resetStatistics();
- 
-    OgreFramework::getSingletonPtr()->sounds->playMusic();
-
-	while(!m_bShutdown && !OgreFramework::getSingletonPtr()->isOgreToBeShutDown()) 
-	{
-		if(OgreFramework::getSingletonPtr()->m_pRenderWnd->isClosed())m_bShutdown = true;
- 
-		Ogre::WindowEventUtilities::messagePump();
- 
-		if(OgreFramework::getSingletonPtr()->m_pRenderWnd->isActive())
-		{
-			startTime = OgreFramework::getSingletonPtr()->m_pTimer->getMillisecondsCPU();
- 
-			OgreFramework::getSingletonPtr()->m_pKeyboard->capture();
-			OgreFramework::getSingletonPtr()->m_pMouse->capture();
- 			
-			if (!pause_state)
-			{
- 				// Our Team's main loop
-
-				ball->update(timeSinceLastFrame);
-				//test_ball->update(timeSinceLastFrame);
-				//test_ball->reset(OgreFramework::getSingletonPtr()->physics);
-
-				for( std::vector<Ball*>::iterator it = ballList.begin(); it != ballList.end(); ++it )
-				{
-					(*it)->update(timeSinceLastFrame);
-				}
-
-
-				penguin->update(timeSinceLastFrame, OgreFramework::getSingletonPtr()->controller, OgreFramework::getSingletonPtr()->m_pCamera);
-				OgreFramework::getSingletonPtr()->updateOgre(timeSinceLastFrame);
-				//paddle->update(timeSinceLastFrame, OgreFramework::getSingletonPtr()->controller);
-	
-				// Handles the event in which the player scores
-
-
-				bool scored = false;
-
-				if(ball->inGoal(goal))
-				{
-					scored = true;
-					ball->reset(physics);
-				}
-
-
-				OgreFramework::getSingletonPtr()->hud->update(timeSinceLastFrame, scored);
-			}
-
-			////////////////////////////////////////////////
-
-			OgreFramework::getSingletonPtr()->m_pRoot->renderOneFrame();
- 
-			timeSinceLastFrame = OgreFramework::getSingletonPtr()->m_pTimer->getMillisecondsCPU() - startTime;
-		}
-		else
-		{
-#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
-            Sleep(1000);
-#else
-            sleep(1);
-#endif
-		}
-	}
- 
-	OgreFramework::getSingletonPtr()->m_pLog->logMessage("Main loop quit");
-	OgreFramework::getSingletonPtr()->m_pLog->logMessage("Shutdown OGRE...");
-}
- 
-//|||||||||||||||||||||||||||||||||||||||||||||||
- 
 bool GameState::keyPressed(const OIS::KeyEvent &keyEventRef)
 {
 	OgreFramework::getSingletonPtr()->keyPressed(keyEventRef);
diff --git a/GameState.hpp b/GameState.hpp
index 434b387..6d83a1a 100644
--- a/GameState.hpp
+++ b/GameState.hpp
@@ -8,7 +8,7 @@
 #include "AppState.hpp"
  
 #include "OgreFramework.hpp"
-#include "WorldObjects.hpp"
+#include "WorldObjectFactory.hpp"
  
 //|||||||||||||||||||||||||||||||||||||||||||||||
 
@@ -26,8 +26,6 @@ public:
 	bool pause();
 	void resume();
 	void update(double timeSinceLastFrame);
-
-	void startDemo();
  
 	bool keyPressed(const OIS::KeyEvent &keyEventRef);
 	bool keyReleased(const OIS::KeyEvent &keyEventRef); 
@@ -36,17 +34,17 @@ public:
 	bool mousePressed(const OIS::MouseEvent &arg, OIS::MouseButtonID id);
 	bool mouseReleased(const OIS::MouseEvent &arg, OIS::MouseButtonID id);
 
-	Ball*		ball;
-	Room*		room;
-	Paddle*		paddle;
-	Penguin*	penguin;
-	Goal*		goal;
+	WorldObjectFactory* worldObjectFactory;
 
-	Terrain*	terrain;
+	Ball*				ball;
+	Room*				room;
+	Paddle*				paddle;
+	Penguin*			penguin;
+	Goal*				goal;
 
-	std::vector<Ball*> ballList;
+	Terrain*			terrain;
 
-	//Ball 		*test_ball;
+	std::vector<Ball*> 	ballList;
 
 	bool		pause_state;
 
@@ -54,9 +52,6 @@ public:
 	PhysicsWrapper*	physics;
 	
 private:
-    void setupDemoScene();
-	void runDemo();
-
 	Ogre::SceneNode*			m_pOgreHeadNode;
 	Ogre::Entity*				m_pOgreHeadEntity;
  
diff --git a/Makefile b/Makefile
index 8715c0b..1816aef 100644
--- a/Makefile
+++ b/Makefile
@@ -64,6 +64,7 @@ am_Project1_OBJECTS = Project1-AppStateManager.$(OBJEXT) \
 	Project1-HUD.$(OBJEXT) Project1-SoundWrapper.$(OBJEXT) \
 	Project1-Controller.$(OBJEXT) Project1-OgreFramework.$(OBJEXT) \
 	Project1-WorldObjectAbstract.$(OBJEXT) \
+	Project1-WorldObjectFactory.$(OBJEXT) \
 	Project1-WorldObjectGoal.$(OBJEXT) \
 	Project1-WorldObjectBall.$(OBJEXT) \
 	Project1-WorldObjectPenguin.$(OBJEXT) \
@@ -242,13 +243,13 @@ top_srcdir = .
 #-------------------------------------------
 # noinst_HEADERS: WorldObject classes .hpp
 #-------------------------------------------
-noinst_HEADERS = WorldObjectAbstract.hpp WorldObjects.hpp WorldObjectGoal.hpp WorldObjectBall.hpp WorldObjectPenguin.hpp WorldObjectRoom.hpp WorldObjectTerrain.hpp  WorldObjectPaddle.hpp OgreApp.hpp
+noinst_HEADERS = WorldObjectAbstract.hpp WorldObjectFactory.hpp WorldObjectGoal.hpp WorldObjectBall.hpp WorldObjectPenguin.hpp WorldObjectRoom.hpp WorldObjectTerrain.hpp  WorldObjectPaddle.hpp OgreApp.hpp
 Project1_CPPFLAGS = -I$(top_srcdir)
 
 #-------------------------------------------
 # Project1_SOURCES: .cpp
 #-------------------------------------------
-Project1_SOURCES = AppStateManager.cpp MenuState.cpp MultiplayerMenuState.cpp ClientMenuState.cpp ServerMenuState.cpp PauseState.cpp ServerState.cpp ClientState.cpp GameState.cpp Network.cpp Physics.cpp HUD.cpp SoundWrapper.cpp Controller.cpp OgreFramework.cpp WorldObjectAbstract.cpp WorldObjectGoal.cpp WorldObjectBall.cpp WorldObjectPenguin.cpp WorldObjectRoom.cpp WorldObjectTerrain.cpp WorldObjectPaddle.cpp OgreApp.cpp main.cpp
+Project1_SOURCES = AppStateManager.cpp MenuState.cpp MultiplayerMenuState.cpp ClientMenuState.cpp ServerMenuState.cpp PauseState.cpp ServerState.cpp ClientState.cpp GameState.cpp Network.cpp Physics.cpp HUD.cpp SoundWrapper.cpp Controller.cpp OgreFramework.cpp WorldObjectAbstract.cpp WorldObjectFactory.cpp WorldObjectGoal.cpp WorldObjectBall.cpp WorldObjectPenguin.cpp WorldObjectRoom.cpp WorldObjectTerrain.cpp WorldObjectPaddle.cpp OgreApp.cpp main.cpp
 Project1_CXXFLAGS = $(OGRE_CFLAGS) $(OIS_CFLAGS) $(bullet_CFLAGS) $(sdl_CFLAGS) $(SDL_mixer_CFLAGS) $(SDL_net_CFLAGS)
 Project1_LDADD = $(OGRE_LIBS) $(OIS_LIBS) $(bullet_LIBS) $(sdl_LIBS) $(SDL_mixer_LIBS) $(SDL_net_LIBS)
 EXTRA_DIST = buildit makeit
@@ -380,6 +381,7 @@ include ./$(DEPDIR)/Project1-ServerState.Po
 include ./$(DEPDIR)/Project1-SoundWrapper.Po
 include ./$(DEPDIR)/Project1-WorldObjectAbstract.Po
 include ./$(DEPDIR)/Project1-WorldObjectBall.Po
+include ./$(DEPDIR)/Project1-WorldObjectFactory.Po
 include ./$(DEPDIR)/Project1-WorldObjectGoal.Po
 include ./$(DEPDIR)/Project1-WorldObjectPaddle.Po
 include ./$(DEPDIR)/Project1-WorldObjectPenguin.Po
@@ -632,6 +634,20 @@ Project1-WorldObjectAbstract.obj: WorldObjectAbstract.cpp
 #	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
 #	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Project1_CPPFLAGS) $(CPPFLAGS) $(Project1_CXXFLAGS) $(CXXFLAGS) -c -o Project1-WorldObjectAbstract.obj `if test -f 'WorldObjectAbstract.cpp'; then $(CYGPATH_W) 'WorldObjectAbstract.cpp'; else $(CYGPATH_W) '$(srcdir)/WorldObjectAbstract.cpp'; fi`
 
+Project1-WorldObjectFactory.o: WorldObjectFactory.cpp
+	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Project1_CPPFLAGS) $(CPPFLAGS) $(Project1_CXXFLAGS) $(CXXFLAGS) -MT Project1-WorldObjectFactory.o -MD -MP -MF $(DEPDIR)/Project1-WorldObjectFactory.Tpo -c -o Project1-WorldObjectFactory.o `test -f 'WorldObjectFactory.cpp' || echo '$(srcdir)/'`WorldObjectFactory.cpp
+	$(am__mv) $(DEPDIR)/Project1-WorldObjectFactory.Tpo $(DEPDIR)/Project1-WorldObjectFactory.Po
+#	source='WorldObjectFactory.cpp' object='Project1-WorldObjectFactory.o' libtool=no \
+#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
+#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Project1_CPPFLAGS) $(CPPFLAGS) $(Project1_CXXFLAGS) $(CXXFLAGS) -c -o Project1-WorldObjectFactory.o `test -f 'WorldObjectFactory.cpp' || echo '$(srcdir)/'`WorldObjectFactory.cpp
+
+Project1-WorldObjectFactory.obj: WorldObjectFactory.cpp
+	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Project1_CPPFLAGS) $(CPPFLAGS) $(Project1_CXXFLAGS) $(CXXFLAGS) -MT Project1-WorldObjectFactory.obj -MD -MP -MF $(DEPDIR)/Project1-WorldObjectFactory.Tpo -c -o Project1-WorldObjectFactory.obj `if test -f 'WorldObjectFactory.cpp'; then $(CYGPATH_W) 'WorldObjectFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/WorldObjectFactory.cpp'; fi`
+	$(am__mv) $(DEPDIR)/Project1-WorldObjectFactory.Tpo $(DEPDIR)/Project1-WorldObjectFactory.Po
+#	source='WorldObjectFactory.cpp' object='Project1-WorldObjectFactory.obj' libtool=no \
+#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
+#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Project1_CPPFLAGS) $(CPPFLAGS) $(Project1_CXXFLAGS) $(CXXFLAGS) -c -o Project1-WorldObjectFactory.obj `if test -f 'WorldObjectFactory.cpp'; then $(CYGPATH_W) 'WorldObjectFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/WorldObjectFactory.cpp'; fi`
+
 Project1-WorldObjectGoal.o: WorldObjectGoal.cpp
 	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Project1_CPPFLAGS) $(CPPFLAGS) $(Project1_CXXFLAGS) $(CXXFLAGS) -MT Project1-WorldObjectGoal.o -MD -MP -MF $(DEPDIR)/Project1-WorldObjectGoal.Tpo -c -o Project1-WorldObjectGoal.o `test -f 'WorldObjectGoal.cpp' || echo '$(srcdir)/'`WorldObjectGoal.cpp
 	$(am__mv) $(DEPDIR)/Project1-WorldObjectGoal.Tpo $(DEPDIR)/Project1-WorldObjectGoal.Po
diff --git a/Makefile.am b/Makefile.am
index 96694f8..099195c 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -8,7 +8,7 @@ noinst_HEADERS = AppState.hpp AppStateManager.hpp MenuState.hpp MultiplayerMenuS
 #-------------------------------------------
 # noinst_HEADERS: WorldObject classes .hpp
 #-------------------------------------------
-noinst_HEADERS = WorldObjectAbstract.hpp WorldObjects.hpp WorldObjectGoal.hpp WorldObjectBall.hpp WorldObjectPenguin.hpp WorldObjectRoom.hpp WorldObjectTerrain.hpp  WorldObjectPaddle.hpp OgreApp.hpp
+noinst_HEADERS = WorldObjectAbstract.hpp WorldObjectFactory.hpp WorldObjectGoal.hpp WorldObjectBall.hpp WorldObjectPenguin.hpp WorldObjectRoom.hpp WorldObjectTerrain.hpp  WorldObjectPaddle.hpp OgreApp.hpp
 
 #-------------------------------------------
 # Name of Executable file
@@ -19,7 +19,7 @@ Project1_CPPFLAGS= -I$(top_srcdir)
 #-------------------------------------------
 # Project1_SOURCES: .cpp
 #-------------------------------------------
-Project1_SOURCES = AppStateManager.cpp MenuState.cpp MultiplayerMenuState.cpp ClientMenuState.cpp ServerMenuState.cpp PauseState.cpp ServerState.cpp ClientState.cpp GameState.cpp Network.cpp Physics.cpp HUD.cpp SoundWrapper.cpp Controller.cpp OgreFramework.cpp WorldObjectAbstract.cpp WorldObjectGoal.cpp WorldObjectBall.cpp WorldObjectPenguin.cpp WorldObjectRoom.cpp WorldObjectTerrain.cpp WorldObjectPaddle.cpp OgreApp.cpp main.cpp
+Project1_SOURCES = AppStateManager.cpp MenuState.cpp MultiplayerMenuState.cpp ClientMenuState.cpp ServerMenuState.cpp PauseState.cpp ServerState.cpp ClientState.cpp GameState.cpp Network.cpp Physics.cpp HUD.cpp SoundWrapper.cpp Controller.cpp OgreFramework.cpp WorldObjectAbstract.cpp WorldObjectFactory.cpp WorldObjectGoal.cpp WorldObjectBall.cpp WorldObjectPenguin.cpp WorldObjectRoom.cpp WorldObjectTerrain.cpp WorldObjectPaddle.cpp OgreApp.cpp main.cpp
 
 Project1_CXXFLAGS= $(OGRE_CFLAGS) $(OIS_CFLAGS) $(bullet_CFLAGS) $(sdl_CFLAGS) $(SDL_mixer_CFLAGS) $(SDL_net_CFLAGS)
 Project1_LDADD= $(OGRE_LIBS) $(OIS_LIBS) $(bullet_LIBS) $(sdl_LIBS) $(SDL_mixer_LIBS) $(SDL_net_LIBS)
diff --git a/Makefile.in b/Makefile.in
index ab1809c..5152d7b 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -64,6 +64,7 @@ am_Project1_OBJECTS = Project1-AppStateManager.$(OBJEXT) \
 	Project1-HUD.$(OBJEXT) Project1-SoundWrapper.$(OBJEXT) \
 	Project1-Controller.$(OBJEXT) Project1-OgreFramework.$(OBJEXT) \
 	Project1-WorldObjectAbstract.$(OBJEXT) \
+	Project1-WorldObjectFactory.$(OBJEXT) \
 	Project1-WorldObjectGoal.$(OBJEXT) \
 	Project1-WorldObjectBall.$(OBJEXT) \
 	Project1-WorldObjectPenguin.$(OBJEXT) \
@@ -242,13 +243,13 @@ top_srcdir = @top_srcdir@
 #-------------------------------------------
 # noinst_HEADERS: WorldObject classes .hpp
 #-------------------------------------------
-noinst_HEADERS = WorldObjectAbstract.hpp WorldObjects.hpp WorldObjectGoal.hpp WorldObjectBall.hpp WorldObjectPenguin.hpp WorldObjectRoom.hpp WorldObjectTerrain.hpp  WorldObjectPaddle.hpp OgreApp.hpp
+noinst_HEADERS = WorldObjectAbstract.hpp WorldObjectFactory.hpp WorldObjectGoal.hpp WorldObjectBall.hpp WorldObjectPenguin.hpp WorldObjectRoom.hpp WorldObjectTerrain.hpp  WorldObjectPaddle.hpp OgreApp.hpp
 Project1_CPPFLAGS = -I$(top_srcdir)
 
 #-------------------------------------------
 # Project1_SOURCES: .cpp
 #-------------------------------------------
-Project1_SOURCES = AppStateManager.cpp MenuState.cpp MultiplayerMenuState.cpp ClientMenuState.cpp ServerMenuState.cpp PauseState.cpp ServerState.cpp ClientState.cpp GameState.cpp Network.cpp Physics.cpp HUD.cpp SoundWrapper.cpp Controller.cpp OgreFramework.cpp WorldObjectAbstract.cpp WorldObjectGoal.cpp WorldObjectBall.cpp WorldObjectPenguin.cpp WorldObjectRoom.cpp WorldObjectTerrain.cpp WorldObjectPaddle.cpp OgreApp.cpp main.cpp
+Project1_SOURCES = AppStateManager.cpp MenuState.cpp MultiplayerMenuState.cpp ClientMenuState.cpp ServerMenuState.cpp PauseState.cpp ServerState.cpp ClientState.cpp GameState.cpp Network.cpp Physics.cpp HUD.cpp SoundWrapper.cpp Controller.cpp OgreFramework.cpp WorldObjectAbstract.cpp WorldObjectFactory.cpp WorldObjectGoal.cpp WorldObjectBall.cpp WorldObjectPenguin.cpp WorldObjectRoom.cpp WorldObjectTerrain.cpp WorldObjectPaddle.cpp OgreApp.cpp main.cpp
 Project1_CXXFLAGS = $(OGRE_CFLAGS) $(OIS_CFLAGS) $(bullet_CFLAGS) $(sdl_CFLAGS) $(SDL_mixer_CFLAGS) $(SDL_net_CFLAGS)
 Project1_LDADD = $(OGRE_LIBS) $(OIS_LIBS) $(bullet_LIBS) $(sdl_LIBS) $(SDL_mixer_LIBS) $(SDL_net_LIBS)
 EXTRA_DIST = buildit makeit
@@ -380,6 +381,7 @@ distclean-compile:
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Project1-SoundWrapper.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Project1-WorldObjectAbstract.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Project1-WorldObjectBall.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Project1-WorldObjectFactory.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Project1-WorldObjectGoal.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Project1-WorldObjectPaddle.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Project1-WorldObjectPenguin.Po@am__quote@
@@ -632,6 +634,20 @@ Project1-WorldObjectAbstract.obj: WorldObjectAbstract.cpp
 @AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Project1_CPPFLAGS) $(CPPFLAGS) $(Project1_CXXFLAGS) $(CXXFLAGS) -c -o Project1-WorldObjectAbstract.obj `if test -f 'WorldObjectAbstract.cpp'; then $(CYGPATH_W) 'WorldObjectAbstract.cpp'; else $(CYGPATH_W) '$(srcdir)/WorldObjectAbstract.cpp'; fi`
 
+Project1-WorldObjectFactory.o: WorldObjectFactory.cpp
+@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Project1_CPPFLAGS) $(CPPFLAGS) $(Project1_CXXFLAGS) $(CXXFLAGS) -MT Project1-WorldObjectFactory.o -MD -MP -MF $(DEPDIR)/Project1-WorldObjectFactory.Tpo -c -o Project1-WorldObjectFactory.o `test -f 'WorldObjectFactory.cpp' || echo '$(srcdir)/'`WorldObjectFactory.cpp
+@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Project1-WorldObjectFactory.Tpo $(DEPDIR)/Project1-WorldObjectFactory.Po
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WorldObjectFactory.cpp' object='Project1-WorldObjectFactory.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Project1_CPPFLAGS) $(CPPFLAGS) $(Project1_CXXFLAGS) $(CXXFLAGS) -c -o Project1-WorldObjectFactory.o `test -f 'WorldObjectFactory.cpp' || echo '$(srcdir)/'`WorldObjectFactory.cpp
+
+Project1-WorldObjectFactory.obj: WorldObjectFactory.cpp
+@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Project1_CPPFLAGS) $(CPPFLAGS) $(Project1_CXXFLAGS) $(CXXFLAGS) -MT Project1-WorldObjectFactory.obj -MD -MP -MF $(DEPDIR)/Project1-WorldObjectFactory.Tpo -c -o Project1-WorldObjectFactory.obj `if test -f 'WorldObjectFactory.cpp'; then $(CYGPATH_W) 'WorldObjectFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/WorldObjectFactory.cpp'; fi`
+@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Project1-WorldObjectFactory.Tpo $(DEPDIR)/Project1-WorldObjectFactory.Po
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WorldObjectFactory.cpp' object='Project1-WorldObjectFactory.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Project1_CPPFLAGS) $(CPPFLAGS) $(Project1_CXXFLAGS) $(CXXFLAGS) -c -o Project1-WorldObjectFactory.obj `if test -f 'WorldObjectFactory.cpp'; then $(CYGPATH_W) 'WorldObjectFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/WorldObjectFactory.cpp'; fi`
+
 Project1-WorldObjectGoal.o: WorldObjectGoal.cpp
 @am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Project1_CPPFLAGS) $(CPPFLAGS) $(Project1_CXXFLAGS) $(CXXFLAGS) -MT Project1-WorldObjectGoal.o -MD -MP -MF $(DEPDIR)/Project1-WorldObjectGoal.Tpo -c -o Project1-WorldObjectGoal.o `test -f 'WorldObjectGoal.cpp' || echo '$(srcdir)/'`WorldObjectGoal.cpp
 @am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Project1-WorldObjectGoal.Tpo $(DEPDIR)/Project1-WorldObjectGoal.Po
diff --git a/Project1 b/Project1
index c6ec519..75abb00 100755
Binary files a/Project1 and b/Project1 differ
diff --git a/ServerState.hpp b/ServerState.hpp
index 7489240..e558687 100644
--- a/ServerState.hpp
+++ b/ServerState.hpp
@@ -8,8 +8,7 @@
 #include "AppState.hpp"
  
 #include "OgreFramework.hpp"
-#include "WorldObjects.hpp"
-#include "WorldObjectBall.hpp"
+#include "WorldObjectFactory.hpp"
  
 //|||||||||||||||||||||||||||||||||||||||||||||||
 
diff --git a/WorldObjectAbstract.cpp b/WorldObjectAbstract.cpp
index d2ad8e3..dc64b1e 100644
--- a/WorldObjectAbstract.cpp
+++ b/WorldObjectAbstract.cpp
@@ -10,12 +10,6 @@ WorldObjectAbstract::WorldObjectAbstract(PhysicsWrapper* physics)
 	worldObject_id = worldObject_id_counter;
 	worldObject_id_counter++;
 	std::cout << worldObject_id << std::endl;
-
-	void createSceneNode();
-	void createRigidBody();	
-
-	//if(physics != NULL)
-	//	attachToDynamicWorld(physics);
 }
 
 WorldObjectAbstract::~WorldObjectAbstract()
@@ -60,18 +54,18 @@ int WorldObjectAbstract::getUniqueId()
 
 void WorldObjectAbstract::updateWorldObjectVisual()
 {
-	worldObjectSceneNode->setOrientation(getOrientation());
-	worldObjectSceneNode->setPosition(getPosition());
+	worldObjectSceneNode->setOrientation(getRigidBodyOrientation());
+	worldObjectSceneNode->setPosition(getRigidBodyPosition());
 }
 
-Ogre::Vector3 WorldObjectAbstract::getPosition()
+Ogre::Vector3 WorldObjectAbstract::getRigidBodyPosition()
 {
 	btTransform trans;
     worldObjectRigidBody->getMotionState()->getWorldTransform(trans);
 	return Ogre::Vector3(trans.getOrigin().getX(), trans.getOrigin().getY(), trans.getOrigin().getZ());
 }
 
-Ogre::Quaternion WorldObjectAbstract::getOrientation()
+Ogre::Quaternion WorldObjectAbstract::getRigidBodyOrientation()
 {
 	btTransform trans;
 	worldObjectRigidBody->getMotionState()->getWorldTransform(trans);
@@ -89,4 +83,32 @@ Ogre::Quaternion WorldObjectAbstract::getOrientation()
 void WorldObjectAbstract::attachToDynamicWorld(PhysicsWrapper* physics)
 {
 	physics->add_object_to_dynamicWorld(worldObjectRigidBody);
+}
+
+// ========================================
+// Abstract methods
+// ========================================
+
+void WorldObjectAbstract::update()
+{
+	std::cout << "WorldObjectAbstract::update()" << std::endl;
+}
+
+void WorldObjectAbstract::initWorldObject(PhysicsWrapper* physics)
+{
+	createSceneNode();
+	createRigidBody();	
+
+	//if(physics != NULL)
+	//	attachToDynamicWorld(physics);
+}
+
+void WorldObjectAbstract::createRigidBody()
+{
+	std::cout << "WorldObjectAbstract::createRigidBody()" << std::endl;
+}
+
+void WorldObjectAbstract::createSceneNode()
+{
+	std::cout << "WorldObjectAbstract::createSceneNode()" << std::endl;
 }
\ No newline at end of file
diff --git a/WorldObjectAbstract.hpp b/WorldObjectAbstract.hpp
index bfbba37..e8e61e2 100644
--- a/WorldObjectAbstract.hpp
+++ b/WorldObjectAbstract.hpp
@@ -74,26 +74,26 @@ const float paddle_length = 10.0f;
 class WorldObjectAbstract {
 public:
 
-	WorldObjectAbstract(PhysicsWrapper* physics);	// This constructor will soon be filled with
-							// calls to virtual methods so all children
-							// follow the same protocol
-
-
+	WorldObjectAbstract(PhysicsWrapper* physics);
 	~WorldObjectAbstract();
+	void initWorldObject(PhysicsWrapper* physics);
+
 
 	void updateAsClient(Ogre::Vector3);
 	void updateAsClient(Ogre::Vector3, Ogre::Quaternion);			
    	Ogre::Vector3 getVisualPosition(); 			// Client Safe		
 	Ogre::Quaternion getVisualOrientation(); 	// Client Safe
 
+
 	int getUniqueId();
 
+
 	virtual void update() = 0;
 
 protected:
 	void updateWorldObjectVisual();				// Syncs visuals with Physics
-	Ogre::Vector3 getPosition(); 				// Only server objects can call this method
-	Ogre::Quaternion getOrientation(); 			// Only server objects can call this method
+	Ogre::Vector3 getRigidBodyPosition(); 		// Only server objects can call this method
+	Ogre::Quaternion getRigidBodyOrientation();	// Only server objects can call this method
 
 	virtual void createSceneNode() = 0;			// These calls are made in the WorldObjectAbstract
 	virtual void createRigidBody() = 0;			// Following protocol will simply our lives.
@@ -103,9 +103,10 @@ protected:
 
 	int 				worldObject_id; 		// World Object unique ID
 
-private:
+
 	void attachToDynamicWorld(PhysicsWrapper* physics);
 
+private:
 	static int 			worldObject_id_counter;
 };
 
diff --git a/WorldObjectBall.cpp b/WorldObjectBall.cpp
index 770d4ed..6edfa85 100644
--- a/WorldObjectBall.cpp
+++ b/WorldObjectBall.cpp
@@ -8,24 +8,8 @@ Ball::Ball(Ogre::SceneManager* m_pSceneMgr, PhysicsWrapper* physics,
 	//const double start_pos_x = 0.0f;
 	//const double start_pos_y = -(room_width/2) + ball_radius;
 	//const double start_pos_z = 0.0f;
-	
-	float ball_radius_node_conversion = ball_radius / 1.0f;
-
-	// Convert static scene_node_counter to string
-	// to give each instance a unique string name
- 	std::string scene_node_counter_string;
- 	std::stringstream out;
- 	out << scene_node_counter;
- 	scene_node_counter_string = out.str();
-
-	std::string ball_name = "ball" + scene_node_counter_string;
-	scene_node_counter++;
 
-	//std::cout << "==================" << std::endl;
-	//std::cout << ball_name << std::endl;
-	//std::cout << "==================" << std::endl;
-
-	createSphere(m_pSceneMgr, start_pos_x, start_pos_y, start_pos_z, ball_radius_node_conversion, ball_name);
+	createSphere(m_pSceneMgr, start_pos_x, start_pos_y, start_pos_z, ball_radius);
 	
 	if(physics != NULL)
 		attachToDynamicWorld(physics);
@@ -40,14 +24,14 @@ Ball::~Ball()
 // Class Methods
 // ==========================
 
-void Ball::createSphere(Ogre::SceneManager* m_pSceneMgr, Ogre::Real start_pos_x, Ogre::Real start_pos_y, Ogre::Real start_pos_z, Ogre::Real rScaleFactor, Ogre::String strObjName)
+void Ball::createSphere(Ogre::SceneManager* m_pSceneMgr, Ogre::Real start_pos_x, Ogre::Real start_pos_y, Ogre::Real start_pos_z, Ogre::Real rScaleFactor)
 {
 
 	//-------------------- I switched it to a cube so textures would work correctly. The original sphere has bad UV mapping
 	// Physics - Ball
 	//--------------------
 
-	btDefaultMotionState* ballMotionState = new btDefaultMotionState(btTransform(btQuaternion(0,0,0,1),btVector3(start_pos_x, start_pos_y, start_pos_z)));
+	btDefaultMotionState* ballMotionState = new btDefaultMotionState(btTransform(btQuaternion(0,0,0,1),btVector3(0, 0, 0)));
 
     btScalar mass = ball_mass;
     btVector3 ballInertia(0,0,0);
@@ -60,26 +44,34 @@ void Ball::createSphere(Ogre::SceneManager* m_pSceneMgr, Ogre::Real start_pos_x,
     worldObjectRigidBody = new btRigidBody(worldObjectRigidBodyCI);
 	worldObjectRigidBody->setLinearVelocity(btVector3(0,0,0));
 
+	// Convert static scene_node_counter to string
+	// to give each instance a unique string name
+ 	std::string scene_node_counter_string;
+ 	std::stringstream out;
+ 	out << scene_node_counter;
+ 	scene_node_counter_string = out.str();
+
+	std::string ball_name = "ball" + scene_node_counter_string;
+	scene_node_counter++;
+
+
 	//--------------------
 	// Visual - Ball
 	//--------------------
 
-	Ogre::Vector3 v3SpherePosition = Ogre::Vector3(start_pos_x, start_pos_y, start_pos_z);
+	Ogre::Vector3 v3SpherePosition = Ogre::Vector3(1000, 1000, 1000);
 	Ogre::Vector3 v3SphereScaleFactor = Ogre::Vector3(rScaleFactor, rScaleFactor, rScaleFactor);
 
-	Ogre::Entity* objSphereEntity = m_pSceneMgr->createEntity(strObjName, "sphereCheck.mesh");
-	worldObjectSceneNode = m_pSceneMgr->getRootSceneNode()->createChildSceneNode(strObjName);
+	Ogre::Entity* objSphereEntity = m_pSceneMgr->createEntity(ball_name, "sphereCheck.mesh");
+	worldObjectSceneNode = m_pSceneMgr->getRootSceneNode()->createChildSceneNode(ball_name);
 	worldObjectSceneNode->attachObject(objSphereEntity);
 
 	worldObjectSceneNode->setPosition(v3SpherePosition);
 	worldObjectSceneNode->setScale(v3SphereScaleFactor);
 	objSphereEntity->setMaterialName("Ball/Snow");
 
-}
+	createRigidBody();
 
-void Ball::attachToDynamicWorld(PhysicsWrapper* physics)
-{
-	physics->add_object_to_dynamicWorld(worldObjectRigidBody);
 }
 
 void Ball::update(double timeSinceLastFrame)
@@ -91,7 +83,7 @@ void Ball::update(double timeSinceLastFrame)
 // in the Goal Object which is passed in
 bool Ball::inGoal(Goal* goal)
 {
-	Ogre::Vector3 ball_pos = getPosition();
+	Ogre::Vector3 ball_pos = getRigidBodyPosition();
 
 	Ogre::Vector3 left_goal_pos = goal->goalLeftNode->getPosition();
 	Ogre::Vector3 right_goal_pos = goal->goalRightNode->getPosition();
@@ -143,7 +135,7 @@ void Ball::reset(PhysicsWrapper* physics)
 	worldObjectRigidBody->setMotionState (motionState);
 }
 
-// =========================================
+// ========================================
 // From Parent Class, WorldObjectAbstract
 // ========================================
 
@@ -154,10 +146,10 @@ void Ball::update()
 
 void Ball::createSceneNode()
 {
-
+	std::cout << "Ball::createSceneNode()" << std::endl;
 }
 
 void Ball::createRigidBody()
 {
-
+	std::cout << "Ball::createRigidBody()" << std::endl;
 }
\ No newline at end of file
diff --git a/WorldObjectBall.hpp b/WorldObjectBall.hpp
index 5a46d18..b78f745 100644
--- a/WorldObjectBall.hpp
+++ b/WorldObjectBall.hpp
@@ -23,7 +23,8 @@ public:
 	// ==========================
 	// From Parent Class, WorldObjectAbstract
 	// ==========================
-	void update(); // From abstract class AbstractWorldObject
+	void update(); 			// From abstract class AbstractWorldObject
+	void initWorldObject(); // From abstract class AbstractWorldObject
 
 protected:
 	// ==========================
@@ -34,8 +35,7 @@ protected:
 
 private:
 
-	void createSphere(Ogre::SceneManager*, Ogre::Real, Ogre::Real, Ogre::Real, Ogre::Real, Ogre::String);
-	void attachToDynamicWorld(PhysicsWrapper*);
+	void createSphere(Ogre::SceneManager*, Ogre::Real, Ogre::Real, Ogre::Real, Ogre::Real);
 
 	static int 				scene_node_counter;
 };
diff --git a/WorldObjectPenguin.cpp b/WorldObjectPenguin.cpp
index 59dde14..49796d1 100644
--- a/WorldObjectPenguin.cpp
+++ b/WorldObjectPenguin.cpp
@@ -82,11 +82,6 @@ void Penguin::createPenguin(Ogre::SceneManager* m_pSceneMgr)
 
 }
 
-void Penguin::attachToDynamicWorld(PhysicsWrapper* physics)
-{
-	physics->add_object_to_dynamicWorld(worldObjectRigidBody);
-}
-
 void Penguin::update(double timeSinceLastFrame, MyController* controller, Ogre::Camera* camera)
 {
 	// We cap the timeSinceLastFrame to avoid
@@ -358,5 +353,5 @@ void Penguin::createSceneNode()
 
 void Penguin::createRigidBody()
 {
-	
+	std::cout << "Penguin::createRigidBody()" << std::endl;
 }
\ No newline at end of file
diff --git a/WorldObjectPenguin.hpp b/WorldObjectPenguin.hpp
index d65b4ea..800f8bb 100644
--- a/WorldObjectPenguin.hpp
+++ b/WorldObjectPenguin.hpp
@@ -46,7 +46,6 @@ private:
 	btCollisionShape* 		penguin_collision_shape;
 
 	void createPenguin(Ogre::SceneManager*);
-	void attachToDynamicWorld(PhysicsWrapper*);
 
 	void processController(double, MyController*, Ogre::Vector3*);
 	void handleGravity(double, Ogre::Vector3*);
diff --git a/WorldObjects.hpp b/WorldObjects.hpp
deleted file mode 100644
index 7ebccd6..0000000
--- a/WorldObjects.hpp
+++ /dev/null
@@ -1,30 +0,0 @@
-//|||||||||||||||||||||||||||||||||||||||||||||||
- 
-#ifndef WORLD_OBJECTS_HPP
-#define WORLD_OBJECTS_HPP
- 
-//|||||||||||||||||||||||||||||||||||||||||||||||
-
-#include "WorldObjectBall.hpp"
-#include "WorldObjectGoal.hpp"
-#include "WorldObjectPenguin.hpp"
-#include "WorldObjectRoom.hpp"
-#include "WorldObjectPaddle.hpp"
-#include "WorldObjectTerrain.hpp"
-
-//====================================================================
-// Yep this class has nothing in it and I know you are 
-// wondering why. This class used to have an insane amount of lines and was
-// extremely bloated. I refactored the big ass code into smaller
-// classes so this just became a file with only header declarations.
-// That way, I don't have the modify the headers of GameState, ServerState,
-// and ClientState. I think it's fine this way for the scope of this 
-// project. If there is reason to refactor, then we can go that 
-// route also.
-//====================================================================
-
-//|||||||||||||||||||||||||||||||||||||||||||||||
- 
-#endif
- 
-//|||||||||||||||||||||||||||||||||||||||||||||||
\ No newline at end of file
